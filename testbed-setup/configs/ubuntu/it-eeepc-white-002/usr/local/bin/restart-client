#!/bin/bash

if [ $# -lt 4 ]
then
    echo "usage : $0 <iface-name> <trace-nr> <login> <port>"
    exit 1
fi

iface_name=$1
trace_nr=$2

output_dir=$HOME/workbench/range-tests/vehicular-traces/trace-$trace_nr
if [ ! -d "$output_dir" ]
then
	mkdir -p "$output_dir"
fi

login=$3
port=$4

# trap ctrl-c and call signal_handler()
stop_loop=false
trap signal_handler INT

# set stop_loop to true after catching CTRL-C signal
signal_handler() {
    echo "** received CTRL-C : quitting $0 script"
    stop_loop=true
}

# create .out files if not ready yet
i=1
filename="$output_dir/consumer.$port.$i.out"
if [ ! -f "$filename" ]
then
	touch "$filename"
fi

# start remote producer
consumer_ip=$(ifconfig wlan-txrx | awk '/inet addr:/{print $2}' | sed 's/addr://')
restart-server "$login" "$consumer_ip" "$port" "$trace_nr"
# start ap scripts
ap_ip=$(ifconfig $iface_name | awk -F ':' '/inet addr/{print $2}' | awk -F. '{OFS=".";NF--;print $0;}')
ssh -i $HOME/.ssh/it root@$ap_ip.1 "(run-ap $trace_nr > /dev/null 2>&1)&"

# start consumer for 1st time
# FIXME : use stdbuf w/ -oL and -eL options to force line buffering, i.e. force the application to output at every newline
stdbuf -oL -eL consumer "$port" > "$filename" 2> /dev/null &

exit 0
