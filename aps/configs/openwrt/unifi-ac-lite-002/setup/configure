#!/bin/sh

if [ $# -lt 1 ]
then
	echo "usage : $0 <type>"
	echo "options : "
	echo "    <type> : 'basic' or 'network'"
	exit 1
fi

# make sure configs dir exists
configs_dir="/root/workbench/configs"
if [ ! -d  "$configs_dir" ]
then
	echo "ERROR : no $configs_dir directory"
	exit 1
fi

if [ "$1" == "basic" ]
then

	# install necessary opkg packages
	opkg update && for i in $(cat "$configs_dir"/setup/packages); do opkg install $i; done

	# symlink /usr/bin scripts
	ln -svf "$configs_dir"/usr/bin/* /usr/bin/

	# /etc/rc.local
	if [ ! -f "/etc/rc.local.bak" ]
	then
		cp /etc/rc.local /etc/rc.local.bak
	fi
	ln -svf "$configs_dir"/etc/rc.local /etc/rc.local

	# /etc/config/system
	if [ ! -f "/etc/config/system.bak" ]
	then
		cp /etc/config/system /etc/config/system.bak
	fi
	ln -svf "$configs_dir"/etc/config/system/system.iperf3 /etc/config/system

	# /etc/config/ntpclient
	cp /etc/config/ntpclient /etc/config/ntpclient.bak
	ln -svf "$configs_dir"/etc/config/ntpclient /etc/config/ntpclient
fi

if [ "$1" == "network" ]
then

	# go ahead with network configuration iff 'ssh wan' rule is in iptables
	# extract possible rule in iptables
	rule=$(iptables-save | grep -E "\-A zone_wan_input.*\-p tcp.*\-\-dport 22.*\-j ACCEPT")
	if [ "$rule" == "" ]
	then
		echo "ERROR : ssh wan rule not set. aborting network configuration."
		exit 1
	fi

	# /etc/config/network
	if [ ! -f "/etc/config/network.bak" ]
	then
		cp /etc/config/network /etc/config/network.bak
	fi
	ln -svf "$configs_dir"/etc/config/network/network.ap /etc/config/network

	# /etc/config/wireless
	if [ ! -f "/etc/config/wireless.bak" ]
	then
		cp /etc/config/wireless /etc/config/wireless.bak
	fi

	# by default, symlink the config for a wpa2-psk ap in the 5.0 GHz band
	ln -svf "$configs_dir"/etc/config/wireless/ap/wpa/38 /etc/config/wireless

	# /etc/config/dhcp
	if [ ! -f "/etc/config/dhcp.bak" ]
	then
		cp /etc/config/dhcp /etc/config/dhcp.bak
	fi

	# dhcp configs for ap mode
	ln -svf "$configs_dir"/etc/config/dhcp/dhcp.ap /etc/config/dhcp
fi

exit 0
